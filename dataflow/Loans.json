{
	"name": "Loans",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText5",
						"type": "DatasetReference"
					},
					"name": "LoanSource",
					"script": "source(output(\n\t\t{_c0} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\trowUrlColumn: 'thisismycurrentfile',\n\twildcardPaths:['[A-Z]*.parquet'],\n\tpartitionBy('roundRobin', 2)) ~> LoanSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "CADOutput1",
						"type": "DatasetReference"
					},
					"name": "SerializeOutput",
					"script": "AlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: true) ~> SerializeOutput"
				}
			],
			"transformations": [
				{
					"name": "Filter1",
					"description": "Filter Loan Status and Valid States",
					"script": "LoanSource filter((loan_status == 'Default' || loan_status == 'Charged Off' || loan_status == 'Fully Paid')\r\n\r\n&&\r\n\r\nregexMatch(addr_state, '^(?:(A[KLRZ]|C[AOT]|D[CE]|FL|GA|HI|I[ADLN]|K[SY]|LA|M[ADEINOST]|N[CDEHJMVY]|O[HKR]|P[AR]|RI|S[CD]|T[NX]|UT|V[AIT]|W[AIVY]))$')) ~> Filter1"
				},
				{
					"name": "Aggregate1",
					"script": "Filter1 aggregate(groupBy(addr_state = addr_state),\n\tratio = sum(annual_inc)) ~> Aggregate1"
				},
				{
					"name": "AlterRow1",
					"script": "Aggregate1 alterRow() ~> AlterRow1"
				}
			]
		}
	}
}