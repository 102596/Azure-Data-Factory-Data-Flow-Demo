{
	"name": "FactLoader2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Facts",
						"type": "DatasetReference"
					},
					"name": "Facts",
					"script": "source(output(\n\t\temployeeID as string,\n\t\tworkLoadDt as string,\n\t\tWorkDt as string,\n\t\tvendorCode as string,\n\t\tCostCenter as string,\n\t\tserviceType as string,\n\t\tapproveStatus as string,\n\t\tHour as string,\n\t\tAmount as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> Facts"
				},
				{
					"dataset": {
						"referenceName": "DimEmployee2",
						"type": "DatasetReference"
					},
					"name": "DimEmployee",
					"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table') ~> DimEmployee"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "FactTable2",
						"type": "DatasetReference"
					},
					"name": "writeFactTable",
					"script": "JoinAllColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tbatchSize:50,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tmapColumn(\n\t\tTotalHours,\n\t\temployeeID,\n\t\tworkLoadDt,\n\t\tWorkDt = OrigData@WorkDt,\n\t\tvendorCode,\n\t\tCostCenter,\n\t\tserviceType,\n\t\tapproveStatus,\n\t\tHour,\n\t\tAmount,\n\t\tfacttimestamp,\n\t\tEmpID,\n\t\tRegionCode,\n\t\tStatusCode,\n\t\tFunctionCode,\n\t\tGradeLevel,\n\t\tRoleCode,\n\t\tStartDt,\n\t\tEndDt,\n\t\tiscurrent = writeFactTable@{OrigData@iscurrent},\n\t\tprocesstime\n\t),\n\tpartitionBy('roundRobin', 4)) ~> writeFactTable"
				}
			],
			"transformations": [
				{
					"name": "SetAttributes",
					"script": "Facts derive(employeeID = toInteger(employeeID),\n\t\tiscurrent = 1,\n\t\tfacttimestamp = currentTimestamp()) ~> SetAttributes"
				},
				{
					"name": "LookupDimEmployee",
					"script": "SetAttributes, DimEmployee lookup(employeeID == EmpID\n\t&& SetAttributes@iscurrent == DimEmployee@iscurrent,\n\tbroadcast: 'none')~> LookupDimEmployee"
				},
				{
					"name": "DailyHourTotal",
					"script": "LookupDimEmployee aggregate(groupBy(WorkDt),\n\tTotalHours = sum(toInteger(Hour))) ~> DailyHourTotal"
				},
				{
					"name": "OrigData",
					"script": "LookupDimEmployee select(mapColumn(\n\t\temployeeID,\n\t\tworkLoadDt,\n\t\tWorkDt,\n\t\tvendorCode,\n\t\tCostCenter,\n\t\tserviceType,\n\t\tapproveStatus,\n\t\tHour,\n\t\tAmount,\n\t\tfacttimestamp,\n\t\tEmpID,\n\t\tRegionCode,\n\t\tStatusCode,\n\t\tFunctionCode,\n\t\tGradeLevel,\n\t\tRoleCode,\n\t\tStartDt,\n\t\tEndDt,\n\t\tiscurrent = DimEmployee@iscurrent,\n\t\tprocesstime\n\t))~> OrigData"
				},
				{
					"name": "JoinAllColumns",
					"script": "DailyHourTotal, OrigData join(DailyHourTotal@WorkDt == OrigData@WorkDt,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> JoinAllColumns"
				}
			]
		}
	}
}