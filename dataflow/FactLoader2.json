{
	"name": "FactLoader2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Facts",
						"type": "DatasetReference"
					},
					"name": "Facts",
					"script": "source(output(\n\t\temployeeID as string,\n\t\tworkLoadDt as string,\n\t\tWorkDt as string,\n\t\tvendorCode as string,\n\t\tCostCenter as string,\n\t\tserviceType as string,\n\t\tapproveStatus as string,\n\t\tHour as string,\n\t\tAmount as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> Facts"
				},
				{
					"dataset": {
						"referenceName": "DimEmployee2",
						"type": "DatasetReference"
					},
					"name": "DimEmployee",
					"script": "source(output(\n\t\tEmpID as integer,\n\t\tRegionCode as string,\n\t\tStatusCode as string,\n\t\tFunctionCode as string,\n\t\tGradeLevel as string,\n\t\tRoleCode as string,\n\t\tStartDt as string,\n\t\tEndDt as string,\n\t\tiscurrent as integer,\n\t\tprocesstime as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table') ~> DimEmployee"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "FactTable2",
						"type": "DatasetReference"
					},
					"name": "writeFactTable",
					"script": "Lookup1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tbatchSize:50,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tmapColumn(\n\t\temployeeID,\n\t\tworkLoadDt,\n\t\tWorkDt,\n\t\tvendorCode,\n\t\tCostCenter,\n\t\tserviceType,\n\t\tapproveStatus,\n\t\tHour,\n\t\tAmount,\n\t\tfacttimestamp,\n\t\tEmpID,\n\t\tRegionCode,\n\t\tStatusCode,\n\t\tFunctionCode,\n\t\tGradeLevel,\n\t\tRoleCode\n\t),\n\tpartitionBy('roundRobin', 4)) ~> writeFactTable"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumn1",
					"script": "Facts derive(employeeID = toInteger(employeeID),\n\t\tiscurrent = 1,\n\t\tfacttimestamp = currentTimestamp()) ~> DerivedColumn1"
				},
				{
					"name": "Lookup1",
					"script": "DerivedColumn1, DimEmployee lookup(employeeID == EmpID\n\t&& DerivedColumn1@iscurrent == DimEmployee@iscurrent,\n\tbroadcast: 'none')~> Lookup1"
				}
			]
		}
	}
}