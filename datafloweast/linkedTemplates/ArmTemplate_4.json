{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "datafloweast"
		},
		"blob_params_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "params-red.csv"
		},
		"blob_params_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "mycontainer/SampleData"
		},
		"driftout_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ""
		},
		"driftout_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "mycontainer/output/SchemaDriftOut"
		},
		"jsonblob_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "zips.json"
		},
		"jsonblob_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "mycontainer/SampleData"
		},
		"locationMap_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "locationMap.csv"
		},
		"locationMap_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "mycontainer/SampleData/Soccer"
		},
		"movie_dataflow_sink_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ""
		},
		"movie_dataflow_sink_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "mycontainer/output"
		},
		"movie_dataflow_source_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "movies.csv"
		},
		"movie_dataflow_source_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "mycontainer/SampleData"
		},
		"movies2_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "movies.csv"
		},
		"movies2_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "mycontainer/SampleData"
		},
		"others_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ""
		},
		"others_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "mycontainer/output/others"
		},
		"salesdrift_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ""
		},
		"salesdrift_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "mycontainer/SampleData/SchemaDrift"
		},
		"soccer_events_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "events.csv"
		},
		"soccer_events_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "mycontainer/SampleData/Soccer"
		},
		"taxi_trip_data_input_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "trip_data_1.csv"
		},
		"taxi_trip_data_input_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "mycontainer/SampleData"
		},
		"taxi_trip_fare_input_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "trip_fare_1.csv"
		},
		"taxi_trip_fare_input_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "mycontainer/SampleData"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/airlines')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase3",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Flights"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "Code",
						"type": "Int32"
					},
					{
						"name": "Airline_Code",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Airline]')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/airports')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase3",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Flights"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "Code",
						"type": "String"
					},
					{
						"name": "City_Airport",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Airport]')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_params')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Params"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "Prop_0",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "[parameters('blob_params_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('blob_params_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/delays')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "carrier",
						"type": "String"
					},
					{
						"name": "year",
						"type": "Int32"
					},
					{
						"name": "delays",
						"type": "Int32"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[delays]')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/driftout')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MyAzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Drifts"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "[parameters('driftout_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('driftout_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/jsonblob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MyAzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Misc"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "_id",
						"type": "String"
					},
					{
						"name": "city",
						"type": "String"
					},
					{
						"name": "loc",
						"type": "String"
					},
					{
						"name": "pop",
						"type": "Int64"
					},
					{
						"name": "state",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "JsonFormat",
						"filePattern": "setOfObjects"
					},
					"fileName": "[parameters('jsonblob_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('jsonblob_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/locationMap')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Soccer"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"quoteChar": "\"",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "[parameters('locationMap_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('locationMap_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/movie_dataflow_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BaseballLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Demos"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "[parameters('movie_dataflow_sink_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('movie_dataflow_sink_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/movie_dataflow_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MyAzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Demos"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "movieId",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "[parameters('movie_dataflow_source_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('movie_dataflow_source_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/movies2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MyAzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Demos"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "movieId",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"quoteChar": "\"",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "[parameters('movies2_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('movies2_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/newbattingtable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Baseball"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"typeProperties": {
					"tableName": "batting1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/others')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "[parameters('others_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('others_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/salesdrift')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MyAzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Drifts"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "[parameters('salesdrift_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('salesdrift_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/soccer_events')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Soccer"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "id_odsp",
						"type": "String"
					},
					{
						"name": "id_event",
						"type": "String"
					},
					{
						"name": "sort_order",
						"type": "Int32"
					},
					{
						"name": "time",
						"type": "String"
					},
					{
						"name": "text",
						"type": "String"
					},
					{
						"name": "event_type",
						"type": "String"
					},
					{
						"name": "event_type2",
						"type": "String"
					},
					{
						"name": "side",
						"type": "String"
					},
					{
						"name": "event_team",
						"type": "String"
					},
					{
						"name": "opponent",
						"type": "String"
					},
					{
						"name": "player",
						"type": "String"
					},
					{
						"name": "player2",
						"type": "String"
					},
					{
						"name": "player_in",
						"type": "String"
					},
					{
						"name": "player_out",
						"type": "String"
					},
					{
						"name": "shot_place",
						"type": "String"
					},
					{
						"name": "shot_outcome",
						"type": "String"
					},
					{
						"name": "is_goal",
						"type": "String"
					},
					{
						"name": "location",
						"type": "String"
					},
					{
						"name": "bodypart",
						"type": "String"
					},
					{
						"name": "assist_method",
						"type": "String"
					},
					{
						"name": "situation",
						"type": "String"
					},
					{
						"name": "fast_break",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"quoteChar": "\"",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "[parameters('soccer_events_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('soccer_events_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/taxi_trip_data_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MyAzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Demos"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "medallion",
						"type": "String"
					},
					{
						"name": "hack_license",
						"type": "String"
					},
					{
						"name": "vendor_id",
						"type": "String"
					},
					{
						"name": "rate_code",
						"type": "String"
					},
					{
						"name": "store_and_fwd_flag",
						"type": "String"
					},
					{
						"name": "pickup_datetime",
						"type": "String"
					},
					{
						"name": "dropoff_datetime",
						"type": "String"
					},
					{
						"name": "passenger_count",
						"type": "String"
					},
					{
						"name": "trip_time_in_secs",
						"type": "String"
					},
					{
						"name": "trip_distance",
						"type": "String"
					},
					{
						"name": "pickup_longitude",
						"type": "String"
					},
					{
						"name": "pickup_latitude",
						"type": "String"
					},
					{
						"name": "dropoff_longitude",
						"type": "String"
					},
					{
						"name": "dropoff_latitude",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "[parameters('taxi_trip_data_input_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('taxi_trip_data_input_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/taxi_trip_fare_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MyAzureBlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Demos"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "medallion",
						"type": "String"
					},
					{
						"name": " hack_license",
						"type": "String"
					},
					{
						"name": " vendor_id",
						"type": "String"
					},
					{
						"name": " pickup_datetime",
						"type": "String"
					},
					{
						"name": " payment_type",
						"type": "String"
					},
					{
						"name": " fare_amount",
						"type": "String"
					},
					{
						"name": " surcharge",
						"type": "String"
					},
					{
						"name": " mta_tax",
						"type": "String"
					},
					{
						"name": " tip_amount",
						"type": "String"
					},
					{
						"name": " tolls_amount",
						"type": "String"
					},
					{
						"name": " total_amount",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "[parameters('taxi_trip_fare_input_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('taxi_trip_fare_input_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_cce')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy_cce",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "mycontainer/SampleData/customers.json"
							},
							{
								"name": "Destination",
								"value": "mycontainer/output/json/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_cce",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_cce",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Copy"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETL Final Stage')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Dsitribute Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": false
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": false,
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "movie_dataflow_source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlDWTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Refresh Cubes",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Dsitribute Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "http://www.yahoo.com",
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "Send Email Notices",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Dsitribute Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "http://www.yahoo.com",
							"method": "GET",
							"headers": {}
						}
					}
				],
				"parameters": {
					"issuccess": {
						"type": "Int",
						"defaultValue": 1
					}
				},
				"folder": {
					"name": "PipelineController"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/movie_dataflow_source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/My Incremental Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Lookup_LastVersion",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"dataset": {
								"referenceName": "AzureSQLIncremental_Changes",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Lookup_CurrentVersion",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT CHANGE_TRACKING_CURRENT_VERSION() as CurrentChangeTrackingVersion"
							},
							"dataset": {
								"referenceName": "AzureSqlIncremental_Data",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Incrememental Copy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_LastVersion",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Lookup_CurrentVersion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select data_source_table.PersonID,data_source_table.Name,data_source_table.Age, CT.SYS_CHANGE_VERSION, SYS_CHANGE_OPERATION from data_source_table RIGHT OUTER JOIN CHANGETABLE(CHANGES data_source_table, @{activity('Lookup_LastVersion').output.firstRow.SYS_CHANGE_VERSION}) as CT on data_source_table.PersonID = CT.PersonID where CT.SYS_CHANGE_VERSION <= @{activity('Lookup_CurrentVersion').output.firstRow.CurrentChangeTrackingVersion}",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "AzureSqlIncremental_Data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BlobStoreIncremental",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update Change Tracking",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Incrememental Copy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'dbo].[Update_ChangeTracking_Version]')]",
							"storedProcedureParameters": {
								"CurrentTrackingVersion": {
									"value": {
										"value": "@{activity('Lookup_CurrentVersion').output.firstRow.CurrentChangeTrackingVersion}",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"TableName": {
									"value": {
										"value": "@{activity('Lookup_LastVersion').output.firstRow.TableName}",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Incremental"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/invokedPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-07-01-preview",
			"properties": {
				"activities": [
					{
						"name": "CopyBlobtoBlob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "AzureBlob1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CADOutput",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"sourceBlobContainer": {
						"type": "String"
					},
					"sinkBlobContainer": {
						"type": "String"
					}
				},
				"folder": {
					"name": "PipelineController"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}